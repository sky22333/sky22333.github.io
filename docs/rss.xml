<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>繁星点点</title><link>http://blog.52013120.xyz</link><description>记录点点滴滴</description><copyright>繁星点点</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/115192496?v=4</url><title>avatar</title><link>http://blog.52013120.xyz</link></image><lastBuildDate>Thu, 03 Oct 2024 22:50:55 +0000</lastBuildDate><managingEditor>繁星点点</managingEditor><ttl>60</ttl><webMaster>繁星点点</webMaster><item><title>我的自建小工具</title><link>http://blog.52013120.xyz/post/wo-de-zi-jian-xiao-gong-ju.html</link><description>## 我的一些加速项目和小工具（感谢cloudflare赛博大活佛）&#13;
&#13;
&gt; [!TIP]&#13;
&gt; #### 加速项目是白嫖的Workers，有请求限制，建议自己部署 💻&#13;
&#13;
- Github加速：https://blog.52013120.xyz/Docker-Hub&#13;
&#13;
- Docker-Hub加速：https://hub.52013120.xyz&#13;
&#13;
- 在线代码编辑器：https://blog.52013120.xyz/caddy&#13;
&#13;
- 在线m3u8播放器：https://blog.52013120.xyz/zhibo&#13;
&#13;
- 视频在线解析播放：https://blog.52013120.xyz/video&#13;
&#13;
&#13;
## 以下是网络上收集的优秀的在线工具网站&#13;
&#13;
#### 工具类&#13;
&#13;
- MD语法在线记事本：https://markdown-editor.org/&#13;
&#13;
- 临时匿名邮箱：https://vmail.dev/&#13;
&#13;
- 临时匿名邮箱：https://temp-mail.org/zh/&#13;
&#13;
- 阅后即焚发信：https://www.sixin.cc/&#13;
&#13;
- 各大软件快捷键查询：https://hotkeycheatsheet.com/zh&#13;
&#13;
- 在线制作好看的文字卡片：https://geekcard.app/&#13;
&#13;
- 在线制作流光卡片：https://fireflycard.shushiai.com/?temp=tempA&#13;
&#13;
- 匿名文件快传：https://wormhole.app/&#13;
&#13;
- 国内文件快传：https://wkkc.vip/&#13;
&#13;
- 在线临时记事本：https://cn.anotepad.com/&#13;
&#13;
&#13;
&#13;
&#13;
#### 素材类&#13;
&#13;
- 网站图标代码：https://fontawesome.com/search&#13;
&#13;
- Youtube视频内容转换为文字：https://www.videotoblog.ai/&#13;
&#13;
- 图标LOGO素材：https://www.aigei.com/&#13;
&#13;
- 图标素材：https://www.aigei.com/&#13;
&#13;
- 艺术渐变网页背景：https://www.color4bg.com/zh-hans/&#13;
&#13;
- 免费LOGO图标设计：https://ray.so/icon&#13;
&#13;
- 在线Youtube视频解析下载：https://ytshorts.savetube.me/zh/youtube-video-downloader-3&#13;
&#13;
- 一键AI抠图：https://www.remove.bg/zh&#13;
&#13;
- 在线图片压缩：https://www.iloveimg.com/zh-cn/compress-image/compress-png&#13;
&#13;
- emo表情：https://www.emojiall.com/zh-hans/sub-categories/J2&#13;
&#13;
- 免费图床：https://lvse.eu.org/&#13;
&#13;
&#13;
### 前端&#13;
&#13;
- Material Icons：https://mui.com/material-ui/guides/responsive-ui&#13;
&#13;
- 饿了么UI：https://element-plus.org/zh-CN/guide/installation.html&#13;
&#13;
- vue.js：https://cn.vuejs.org/guide/quick-start。</description><guid isPermaLink="true">http://blog.52013120.xyz/post/wo-de-zi-jian-xiao-gong-ju.html</guid><pubDate>Tue, 01 Oct 2024 23:46:44 +0000</pubDate></item><item><title>纯CSS实现剧透效果</title><link>http://blog.52013120.xyz/post/chun-CSS-shi-xian-ju-tou-xiao-guo.html</link><description>### 纯CSS实现剧透效果&#13;
&#13;
**在Telegram客户端中，文字的`spoiler`效果可以通过特定的格式来实现。</description><guid isPermaLink="true">http://blog.52013120.xyz/post/chun-CSS-shi-xian-ju-tou-xiao-guo.html</guid><pubDate>Sat, 21 Sep 2024 12:54:39 +0000</pubDate></item><item><title>在CloudflareWAF中屏蔽国内浏览器</title><link>http://blog.52013120.xyz/post/zai-CloudflareWAF-zhong-ping-bi-guo-nei-liu-lan-qi.html</link><description>**要在Cloudflare WAF免费计划中添加屏蔽国内浏览器的规则，请按照以下步骤操作。</description><guid isPermaLink="true">http://blog.52013120.xyz/post/zai-CloudflareWAF-zhong-ping-bi-guo-nei-liu-lan-qi.html</guid><pubDate>Wed, 21 Aug 2024 08:45:31 +0000</pubDate></item><item><title>网络安全之百度URL欺骗漏洞分析和复现</title><link>http://blog.52013120.xyz/post/wang-luo-an-quan-zhi-bai-du-URL-qi-pian-lou-dong-fen-xi-he-fu-xian.html</link><description>- **场景介绍**&#13;
骗子给了一个网站诱导访问，链接很长，看开头是百度的官方链接，`https://m.baidu.com/?from=ddcai#iact=wiseindex/tabs/news/activity/newsdetail`  所以安全意识不强的肯定以为是安全的网站，然后点进去后就中招了&#13;
&#13;
- **名词解释**&#13;
这种漏洞允许攻击者构造一个看似合法的URL（例如 `https://a.com/url=https://b.com` ），但实际上会显示来自另一个不受信任的网站（如 `https://b.com` ）的内容，而用户的浏览器地址栏中显示的仍然是原网站的URL (`https://a.com` )。</description><guid isPermaLink="true">http://blog.52013120.xyz/post/wang-luo-an-quan-zhi-bai-du-URL-qi-pian-lou-dong-fen-xi-he-fu-xian.html</guid><pubDate>Fri, 16 Aug 2024 02:20:52 +0000</pubDate></item><item><title>超级强大的ansible批量管理主机运维工具使用教程</title><link>http://blog.52013120.xyz/post/chao-ji-qiang-da-de-ansible-pi-liang-guan-li-zhu-ji-yun-wei-gong-ju-shi-yong-jiao-cheng.html</link><description>## 🔵ansible批量管理主机运维工具—被控主机无需安装任何东西&#13;
&#13;
### 1：安装并创建配置文件&#13;
```&#13;
sudo apt update&#13;
sudo apt install ansible -y&#13;
```&#13;
```&#13;
mkdir -p /etc/ansible &amp;&amp; cd /etc/ansible &amp;&amp; touch ansible.cfg hosts renwu.yml&#13;
```&#13;
&#13;
&gt; `ansible.cfg` 配置Ansible的全局设置。</description><guid isPermaLink="true">http://blog.52013120.xyz/post/chao-ji-qiang-da-de-ansible-pi-liang-guan-li-zhu-ji-yun-wei-gong-ju-shi-yong-jiao-cheng.html</guid><pubDate>Tue, 13 Aug 2024 22:32:34 +0000</pubDate></item><item><title>收集整理的最新的常用VPS脚本工具</title><link>http://blog.52013120.xyz/post/shou-ji-zheng-li-de-zui-xin-de-chang-yong-VPS-jiao-ben-gong-ju.html</link><description>**收集整理的最新的常用VPS脚本工具，方便要使用的时候可以快速的找到，包含VPS测试脚本（一键测评，综合测试，IP质量/解锁，带宽测试，路由追踪，延迟/丢包测试），运维工具包等，DD重装系统脚本，科学工具，其他工具等等，会定期添加修改一些更新或者失效的脚本。</description><guid isPermaLink="true">http://blog.52013120.xyz/post/shou-ji-zheng-li-de-zui-xin-de-chang-yong-VPS-jiao-ben-gong-ju.html</guid><pubDate>Sat, 10 Aug 2024 09:24:04 +0000</pubDate></item><item><title>无法注册TG账号和国内号码接收不到验证码详细解决方案</title><link>http://blog.52013120.xyz/post/wu-fa-zhu-ce-TG-zhang-hao-he-guo-nei-hao-ma-jie-shou-bu-dao-yan-zheng-ma-xiang-xi-jie-jue-fang-an.html</link><description>## 1：国内号码接不到验证码&#13;
首先确保你的科学上网环境是正常的，并且你的梯子节点IP不会乱跳，是固定的IP&#13;
并且尽量使用手机客户端注册，不要使用电脑或网页注册。</description><guid isPermaLink="true">http://blog.52013120.xyz/post/wu-fa-zhu-ce-TG-zhang-hao-he-guo-nei-hao-ma-jie-shou-bu-dao-yan-zheng-ma-xiang-xi-jie-jue-fang-an.html</guid><pubDate>Wed, 07 Aug 2024 05:46:19 +0000</pubDate></item><item><title>国内环境安装xui面板</title><link>http://blog.52013120.xyz/post/guo-nei-huan-jing-an-zhuang-xui-mian-ban.html</link><description>## 支持的系统&#13;
&#13;
&gt; amd64架构&#13;
&#13;
- CentOS 7+&#13;
- Ubuntu 18+&#13;
- Debian 8+&#13;
&#13;
&#13;
## 一键安装脚本（支持纯IPV6环境和国内环境）&#13;
&#13;
```&#13;
bash &lt;(wget -qO- https://gitlab.com/yishijie/wenjian/raw/main/xui.sh)&#13;
```&#13;
&#13;
## 手动安装&#13;
&#13;
1. 下载压缩包[(下载地址)](https://gitlab.com/yishijie/wenjian/-/blob/main/x-ui-linux-amd64.tar.gz?ref_type=heads) 到本地。</description><guid isPermaLink="true">http://blog.52013120.xyz/post/guo-nei-huan-jing-an-zhuang-xui-mian-ban.html</guid><pubDate>Tue, 06 Aug 2024 15:24:48 +0000</pubDate></item><item><title>免费接码网站合集</title><link>http://blog.52013120.xyz/post/mian-fei-jie-ma-wang-zhan-he-ji.html</link><description>### 付费平台&#13;
&#13;
- https://5sim.net/zh  支持支付宝/USDT/价格便宜&#13;
&#13;
- https://www.talkatone.com 独享号码/永久使用&#13;
&#13;
&#13;
### 免费临时的平台&#13;
&#13;
- https://zh.mytrashmobile.com&#13;
&#13;
- https://ch.freephonenum.com&#13;
&#13;
- https://www.receive-sms-online.info&#13;
&#13;
- https://receive-a-sms.com&#13;
&#13;
- https://smsnumbersonline.com&#13;
&#13;
- https://sms-online.co/receive-free-sms&#13;
&#13;
- https://receive-sms.com&#13;
&#13;
- http://receivefreesms.com&#13;
&#13;
- https://www.receivesmsonline.net&#13;
&#13;
- https://www.freeonlinephone.org&#13;
&#13;
- https://www.textnow.com&#13;
&#13;
- https://www.pinger.com/text-free&#13;
&#13;
- https://receive-sms.com&#13;
&#13;
- http://receivefreesms.net&#13;
&#13;
- https://sms-receive.net&#13;
&#13;
- https://www.receivesms.net&#13;
&#13;
- https://www.receivesms.co&#13;
&#13;
- http://receiveonlinesms.com。</description><guid isPermaLink="true">http://blog.52013120.xyz/post/mian-fei-jie-ma-wang-zhan-he-ji.html</guid><pubDate>Tue, 06 Aug 2024 15:11:22 +0000</pubDate></item><item><title>完整的网络状态码列表</title><link>http://blog.52013120.xyz/post/wan-zheng-de-wang-luo-zhuang-tai-ma-lie-biao.html</link><description>## 响应码大致有五个范围：&#13;
&#13;
- 1xx – 信息类&#13;
- 2xx – 请求成功&#13;
- 3xx – 跳转&#13;
- 4xx – 客户端错误&#13;
- 5xx – 服务器错误&#13;
&#13;
&#13;
## 1xx – 提供某种附加信息&#13;
1xx 状态码表示服务器已收到请求，处理将继续。</description><guid isPermaLink="true">http://blog.52013120.xyz/post/wan-zheng-de-wang-luo-zhuang-tai-ma-lie-biao.html</guid><pubDate>Fri, 19 Jul 2024 04:12:54 +0000</pubDate></item><item><title>关于xui面板报错无法监听127.0.0.1:62789的问题</title><link>http://blog.52013120.xyz/post/guan-yu-xui-mian-ban-bao-cuo-wu-fa-jian-ting-127.0.0.1-62789-de-wen-ti.html</link><description>## 关于xui面板报错`无法监听127.0.0.1:62789`&#13;
&#13;
&#13;
#### 很多网友在用服务器搭建xui面板创建节点的时候，会出现报错的问题，报错信息大致为：`无法监听127.0.0.1:62789`&#13;
#### 表现如图：&#13;
![photo_2024-07-18_15-03-38](https://github.com/user-attachments/assets/8c6952ad-9dd7-4f60-a216-046f8b90b948)&#13;
&#13;
&#13;
#### 这种情况多发于小IDC厂商，正经大厂基本没有这个问题，经过我的排查，原因在于小IDC商家都是用的智简魔方系统，这个IDC系统有BUG，BUG的现象是配置的系统没有把`127.0.0.1`绑定为本地环回地址，才导致监听失败，因为xui找不到这个IP，自然就监听失败。</description><guid isPermaLink="true">http://blog.52013120.xyz/post/guan-yu-xui-mian-ban-bao-cuo-wu-fa-jian-ting-127.0.0.1-62789-de-wen-ti.html</guid><pubDate>Thu, 18 Jul 2024 07:43:42 +0000</pubDate></item><item><title>Xboard面板常见问题</title><link>http://blog.52013120.xyz/post/Xboard-mian-ban-chang-jian-wen-ti.html</link><description>### [国旗图标](https://www.emojiall.com/zh-hans/sub-categories/J2)&#13;
&#13;
&#13;
### 主题目录&#13;
```&#13;
public/theme&#13;
```&#13;
&#13;
### 支付插件目录&#13;
```&#13;
app/Payments&#13;
```&#13;
&#13;
### 客户端适配参考目录&#13;
```&#13;
app/Http/Controllers/Client/Protocols&#13;
```&#13;
&#13;
### 订阅下发文件目录&#13;
```&#13;
/www/resources/rules/custom.clash.yaml&#13;
```&#13;
[查看目录中的所有文件](https://github.com/cedar2025/Xboard/tree/5a0e59b103657ccd300204046b877f653cd2aa30/app/Protocols)&#13;
&#13;
&#13;
### 强制获取订阅（URL后面加上这个参数）&#13;
&#13;
一般用于订阅地址输入到浏览器后无法获取订阅信息&#13;
```&#13;
&amp;flag=meta&amp;types=all&#13;
```&#13;
&#13;
### 忘记管理员密码&#13;
&#13;
可以在站点目录下执行命令找回密码&#13;
```&#13;
docker exec -it xboard-xboard-1 /bin/sh&#13;
```&#13;
```&#13;
php artisan reset:password 管理员邮箱&#13;
```&#13;
重启&#13;
```&#13;
cd /root/Xboard&#13;
```&#13;
```&#13;
docker compose restart&#13;
```&#13;
---&#13;
&#13;
&#13;
## Xboard迁移Xboard出现的各种问题解决方案&#13;
&#13;
一般都是数据库里的问题，进入数据库的`v2_settings`表，修改https配置，域名配置，路径配置，等等配置。</description><guid isPermaLink="true">http://blog.52013120.xyz/post/Xboard-mian-ban-chang-jian-wen-ti.html</guid><pubDate>Wed, 03 Jul 2024 07:42:35 +0000</pubDate></item><item><title>如何部署Github中的项目（主流语言安装依赖和构建命令）</title><link>http://blog.52013120.xyz/post/ru-he-bu-shu-Github-zhong-de-xiang-mu-%EF%BC%88-zhu-liu-yu-yan-an-zhuang-yi-lai-he-gou-jian-ming-ling-%EF%BC%89.html</link><description>## 各个主流编程语言的安装依赖和构建运行命令&#13;
&#13;
&gt; [!TIP]&#13;
&gt; ## JavaScript（Node.js）💻&#13;
&#13;
#### 基本代码结构&#13;
```&#13;
my-nodejs-project/&#13;
├── node_modules/&#13;
├── public/&#13;
│ └── index.html&#13;
├── src/&#13;
│ ├── index.js&#13;
│ └── App.js&#13;
├── .gitignore&#13;
├── package.json&#13;
└── webpack.config.js&#13;
```&#13;
&#13;
#### 安装依赖&#13;
```&#13;
npm install&#13;
```&#13;
#### 构建打包&#13;
```&#13;
npm run build&#13;
```&#13;
#### 运行&#13;
```&#13;
npm start&#13;
```&#13;
&#13;
&gt; [!TIP]&#13;
&gt; ## Python 💻&#13;
&#13;
#### 基本代码结构&#13;
```&#13;
my-python-project/&#13;
├── .github/&#13;
├── myapp.py&#13;
├── config.py&#13;
├── requirements.txt&#13;
├── scripts/&#13;
│   └── run.sh&#13;
├── logs/&#13;
├── models/&#13;
├── services/&#13;
├── templates/&#13;
├── tests/&#13;
├── utils/&#13;
├── .dockerignore&#13;
├── .env.local&#13;
├── .gitignore&#13;
└── LICENSE&#13;
```&#13;
&#13;
#### 安装依赖&#13;
```&#13;
pip install -r requirements.txt&#13;
```&#13;
&#13;
#### 运行&#13;
```&#13;
python myapp.py&#13;
```&#13;
&#13;
&gt; [!TIP]&#13;
&gt; ## Java (Spring Boot) 💻&#13;
&#13;
#### 基本代码结构&#13;
```&#13;
my-springboot-project/&#13;
├── src/&#13;
│ ├── main/&#13;
│ │ ├── java/&#13;
│ │ │ └── com/&#13;
│ │ │ └── example/&#13;
│ │ │ └── MySpringBootApplication.java&#13;
│ │ └── resources/&#13;
│ │ ├── application.properties&#13;
│ │ └── static/&#13;
│ └── test/&#13;
│ └── java/&#13;
│ └── com/&#13;
│ └── example/&#13;
│ └── MySpringBootApplicationTests.java&#13;
├── .gitignore&#13;
├── build.gradle&#13;
└── pom.xml&#13;
```&#13;
&#13;
#### 安装依赖和构建&#13;
&#13;
#### Maven&#13;
```&#13;
mvn clean package&#13;
```&#13;
#### Gradle&#13;
```&#13;
./gradlew build&#13;
```&#13;
#### 运行构建出来的`jar`包（一般在项目的`target/you.jar`目录中）&#13;
```&#13;
java -jar target/you.jar&#13;
```&#13;
&#13;
&gt; [!TIP]&#13;
&gt; ## Go 💻&#13;
&#13;
&#13;
#### 基本代码结构&#13;
```&#13;
my-go-project/&#13;
├── main.go&#13;
└── README.md&#13;
```&#13;
&#13;
#### 无依赖管理工具的默认方式&#13;
&#13;
#### 构建&#13;
&#13;
```&#13;
go build -o app myapp&#13;
```&#13;
#### 运行构建出来的二进制文件（一般在当前目录下）&#13;
```&#13;
./myapp&#13;
```&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; ## 前端项目（React、Vue，等等） 💻&#13;
&#13;
#### 基本代码结构&#13;
```&#13;
my-react-app/&#13;
├── node_modules/&#13;
├── public/&#13;
│ └── index.html&#13;
├── src/&#13;
│ ├── App.js&#13;
│ └── index.js&#13;
├── .gitignore&#13;
├── package.json&#13;
└── README.md&#13;
```&#13;
&#13;
&#13;
#### 安装依赖&#13;
```&#13;
npm install&#13;
```&#13;
&#13;
#### 构建打包&#13;
```&#13;
npm run build&#13;
```&#13;
&#13;
`React`项目默认会将构建后的文件输出到 `build` 目录，使用 `nginx`  `caddy`等等工具运行构建出来的静态文件。</description><guid isPermaLink="true">http://blog.52013120.xyz/post/ru-he-bu-shu-Github-zhong-de-xiang-mu-%EF%BC%88-zhu-liu-yu-yan-an-zhuang-yi-lai-he-gou-jian-ming-ling-%EF%BC%89.html</guid><pubDate>Wed, 03 Jul 2024 06:20:57 +0000</pubDate></item><item><title>最好用的 sing-box 一键搭建节点脚本</title><link>http://blog.52013120.xyz/post/zui-hao-yong-de-%20sing-box%20-yi-jian-da-jian-jie-dian-jiao-ben.html</link><description>### 最好用的 sing-box 一键安装脚本&amp;管理脚本&amp;多协议&#13;
&#13;
博主自己的脚本，基于233boy大佬的优化修改版&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 一键安装运行&#13;
&#13;
```&#13;
bash &lt;(wget -qO- -o- https://github.com/admin8800/sing-box/raw/main/install.sh)&#13;
```&#13;
&#13;
&gt; [!TIP]&#13;
&gt; 脚本管理&#13;
&#13;
## 输入`sing-box`可打开管理菜单&#13;
&#13;
首次运行会自动搭建一个`reality`协议&#13;
&#13;
&#13;
&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 特点介绍&#13;
&#13;
- 快速安装&#13;
- 无敌好用&#13;
- 零学习成本&#13;
- 自动化 TLS&#13;
- 简化所有流程&#13;
- 兼容 sing-box 命令&#13;
- 强大的快捷参数&#13;
- 支持所有常用协议&#13;
- 一键添加 VLESS-REALITY (默认)&#13;
- 一键添加 TUIC&#13;
- 一键添加 Trojan&#13;
- 一键添加 Hysteria2&#13;
- 一键添加 Shadowsocks 2022&#13;
- 一键添加 VMess-(TCP/HTTP/QUIC)&#13;
- 一键添加 VMess-(WS/H2/HTTPUpgrade)-TLS&#13;
- 一键添加 VLESS-(WS/H2/HTTPUpgrade)-TLS&#13;
- 一键添加 Trojan-(WS/H2/HTTPUpgrade)-TLS&#13;
- 一键启用 BBR&#13;
- 一键更改伪装网站&#13;
- 一键更改 (端口/UUID/密码/域名/路径/加密方式/SNI/等...)&#13;
- 还有更多...&#13;
&#13;
&gt; [!TIP]&#13;
&gt; 更多管理命令&#13;
```&#13;
基本:&#13;
   v, version                                      显示当前版本&#13;
   ip                                              返回当前主机的 IP&#13;
   pbk                                             同等于 sing-box generate reality-keypair&#13;
   get-port                                        返回一个可用的端口&#13;
   ss2022                                          返回一个可用于 Shadowsocks 2022 的密码&#13;
&#13;
一般:&#13;
   a, add [protocol] [args... | auto]              添加配置&#13;
   c, change [name] [option] [args... | auto]      更改配置&#13;
   d, del [name]                                   删除配置**&#13;
   i, info [name]                                  查看配置&#13;
   qr [name]                                       二维码信息&#13;
   url [name]                                      URL 信息&#13;
   log                                             查看日志&#13;
更改:&#13;
   full [name] [...]                               更改多个参数&#13;
   id [name] [uuid | auto]                         更改 UUID&#13;
   host [name] [domain]                            更改域名&#13;
   port [name] [port | auto]                       更改端口&#13;
   path [name] [path | auto]                       更改路径&#13;
   passwd [name] [password | auto]                 更改密码&#13;
   key [name] [Private key | atuo] [Public key]    更改密钥&#13;
   method [name] [method | auto]                   更改加密方式&#13;
   sni [name] [ ip | domain]                       更改 serverName&#13;
   new [name] [...]                                更改协议&#13;
   web [name] [domain]                             更改伪装网站&#13;
&#13;
进阶:&#13;
   dns [...]                                       设置 DNS&#13;
   dd, ddel [name...]                              删除多个配置**&#13;
   fix [name]                                      修复一个配置&#13;
   fix-all                                         修复全部配置&#13;
   fix-caddyfile                                   修复 Caddyfile&#13;
   fix-config.json                                 修复 config.json&#13;
   import                                          导入 sing-box/v2ray 脚本配置&#13;
&#13;
管理:&#13;
   un, uninstall                                   卸载&#13;
   u, update [core | sh | caddy] [ver]             更新&#13;
   U, update.sh                                    更新脚本&#13;
   s, status                                       运行状态&#13;
   start, stop, restart [caddy]                    启动, 停止, 重启&#13;
   t, test                                         测试运行&#13;
   reinstall                                       重装脚本&#13;
&#13;
测试:&#13;
   debug [name]                                    显示一些 debug 信息, 仅供参考&#13;
   gen [...]                                       同等于 add, 但只显示 JSON 内容, 不创建文件, 测试使用&#13;
   no-auto-tls [...]                               同等于 add, 但禁止自动配置 TLS, 可用于 *TLS 相关协议&#13;
其他:&#13;
   bbr                                             启用 BBR, 如果支持&#13;
   bin [...]                                       运行 sing-box 命令, 例如: sing-box bin help&#13;
   [...] [...]                                     兼容绝大多数的 sing-box 命令, 例如: sing-box generate uuid&#13;
   h, help                                         显示此帮助界面&#13;
```&#13;
&#13;
---&#13;
。</description><guid isPermaLink="true">http://blog.52013120.xyz/post/zui-hao-yong-de-%20sing-box%20-yi-jian-da-jian-jie-dian-jiao-ben.html</guid><pubDate>Tue, 02 Jul 2024 09:02:16 +0000</pubDate></item><item><title>ios最新美区ID注册方法</title><link>http://blog.52013120.xyz/post/ios-zui-xin-mei-qu-ID-zhu-ce-fang-fa.html</link><description>ios最新美区ID注册教程&#13;
&#13;
1】首先浏览器里打开网页版iCloud：  www.icloud.com&#13;
&#13;
2】点击登陆，在登录页面的下面找到`创建 Apple ID`，然后用纯英文填写姓名，国家和地区选择美国 (注册其他区就选其他) &#13;
&#13;
3】然后填写邮箱和密码，再填写电话号码，填自己国内的号码就可以&#13;
&#13;
4】验证完成之后，浏览器端的操作就完成了，接下来我们打开苹果手机的App Store，先退出原有账号，然后登陆刚才注册的AppleID&#13;
&#13;
5】弹窗提示信息不完整，点击`检查`按钮，继续点击同意条款和下一步，在指定框框区域填写美国电话和账单地址就大功告成了&#13;
&#13;
美国号码和账单地址在这里获取：  www.meiguodizhi.com/usa-address/oregon&#13;
&#13;
6】这里需要特别注意：付款方式菜单千万不要点击信用卡和 PayPal，否则你就必须填写付款信息 (如果你确实需要绑卡当然可以点)&#13;
&#13;
。</description><guid isPermaLink="true">http://blog.52013120.xyz/post/ios-zui-xin-mei-qu-ID-zhu-ce-fang-fa.html</guid><pubDate>Tue, 02 Jul 2024 08:53:08 +0000</pubDate></item><item><title>V2board前后端分离</title><link>http://blog.52013120.xyz/post/V2board-qian-hou-duan-fen-li.html</link><description>&gt; [!NOTE]&#13;
&gt; ## 前后端分离主题部署&#13;
&#13;
### `V2board`和`Xboard`步骤一样&#13;
&#13;
###  当你得到一个前后端分离的主题，文件中的目录结构大概是这样的：&#13;
````&#13;
├── assets&#13;
│   ├── ArrowPathIcon-BcKBEic3.js&#13;
│   ├── CheckOutlined-kSoYgoEi.js&#13;
│   ├── Detail-CZ1NhySb.js&#13;
│   ├── Detail-CiCRNMEx.css&#13;
│   └── Home-BIEpZQVD.css&#13;
├── .DS_Store&#13;
├── config.js&#13;
├── favicon.ico&#13;
└── index.html&#13;
````&#13;
&#13;
### 重点在于`config.js`这个文件，这个文件里需要填写你机场的配置信息&#13;
&#13;
#### 文件内容以这个为例，自己举一反三，基本逻辑都差不多&#13;
```&#13;
window.config={&#13;
    logo: 'https://img2.imgtp.com/2023/01/11/YzU8iDJp.png', // 网站logo&#13;
    title:'一元机场', // 网站标题&#13;
    host:'https://xxxxxxx.com/', // 机场原来的域名地址&#13;
    storeHome: {&#13;
         &#13;
        下面的代码省略.......&#13;
       ............&#13;
       ..........&#13;
&#13;
```&#13;
&#13;
### 配置好后就用就把整个项目文件用`nginx`或者`caddy`运行起来，宝塔用户就直接把整个主题文件放在站点目录里即可。</description><guid isPermaLink="true">http://blog.52013120.xyz/post/V2board-qian-hou-duan-fen-li.html</guid><pubDate>Tue, 02 Jul 2024 08:46:39 +0000</pubDate></item><item><title>Markdown语法教程</title><link>http://blog.52013120.xyz/post/Markdown-yu-fa-jiao-cheng.html</link><description>&#13;
Github的语法里面有5中警报强调信息，在写文章的时候，适当使用可以提高文章的可读性，并且颜色也更加丰富。</description><guid isPermaLink="true">http://blog.52013120.xyz/post/Markdown-yu-fa-jiao-cheng.html</guid><pubDate>Tue, 02 Jul 2024 08:37:02 +0000</pubDate></item><item><title>Github加速</title><link>http://blog.52013120.xyz/post/Github-jia-su.html</link><description>#  GitHub加速方法&#13;
&#13;
#  方法一：&#13;
&#13;
首先你需要有一个可以直连的sk5代理，建议用外国服务器安装xui面板自建&#13;
```&#13;
sudo vim ~/.bashrc&#13;
```&#13;
```&#13;
export all_proxy='socks5://user:pass@127.0.0.1:20170'&#13;
export HTTP_PROXY='socks5://user:pass@127.0.0.1:20170'&#13;
export HTTPS_PROXY='socks5://user:pass@127.0.0.1:20170'&#13;
```&#13;
```&#13;
source ~/.bashrc&#13;
```&#13;
&#13;
此时输入```curl ip.sb```查看本机IP判断是否配置成功&#13;
&#13;
如需删除并停止，只需清空文件并重新加载即可&#13;
&#13;
注意：如果脚本命令前面带`sudo`，则需要添加`-E`传递环境变量才会生效&#13;
&#13;
&#13;
&#13;
&#13;
---&#13;
&#13;
# 方法二：v2rayA代理&#13;
&#13;
#### [官方文档](https://v2raya.org/docs/prologue/installation/debian/)&#13;
&#13;
#### 手动使用软件源安装&#13;
[手动下载v2rayA软件源](https://github.com/v2rayA/v2raya-apt/tree/master/pool/main/v/v2raya)上传到服务器&#13;
&#13;
[手动下载xray软件源](https://github.com/v2rayA/v2raya-apt/tree/master/pool/main/x/xray)上传到服务器&#13;
&#13;
安装&#13;
```&#13;
sudo apt install xray.deb路径 v2rayA.deb路径&#13;
```&#13;
替换两个deb包所在的实际路径&#13;
&#13;
启动&#13;
```&#13;
sudo systemctl start v2raya.service&#13;
```&#13;
```&#13;
默认端口：&#13;
2017: v2rayA面板端口&#13;
20170: SOCKS协议&#13;
20171: HTTP协议&#13;
20172: 带分流规则的HTTP协议&#13;
32345: tproxy透明代理所需&#13;
```&#13;
&#13;
卸载&#13;
```&#13;
sudo apt-get remove v2raya xray&#13;
```&#13;
&#13;
&#13;
&#13;
### 快捷安装方式&#13;
v2ray内核&#13;
```&#13;
sudo apt install snapd&#13;
```&#13;
```&#13;
sudo snap install v2raya&#13;
```&#13;
需要修改配置文件&#13;
```&#13;
sudo vim /etc/systemd/system/snap.v2raya.v2raya.service&#13;
```&#13;
`ExecStart`参数后面增加` --address 0.0.0.0:2017`，只需增加即可，注意空格需保留。</description><guid isPermaLink="true">http://blog.52013120.xyz/post/Github-jia-su.html</guid><pubDate>Tue, 02 Jul 2024 07:44:08 +0000</pubDate></item><item><title>Docker镜像加速和离线安装</title><link>http://blog.52013120.xyz/post/Docker-jing-xiang-jia-su-he-li-xian-an-zhuang.html</link><description>## Docker镜像加速和离线安装&#13;
&#13;
国内从 Docker Hub 拉取镜像有时会遇到困难，此时可以配置镜像加速器。</description><guid isPermaLink="true">http://blog.52013120.xyz/post/Docker-jing-xiang-jia-su-he-li-xian-an-zhuang.html</guid><pubDate>Tue, 02 Jul 2024 07:42:16 +0000</pubDate></item><item><title>Liunx配置wrap</title><link>http://blog.52013120.xyz/post/Liunx-pei-zhi-wrap.html</link><description>[其他系统安装](https://pkg.cloudflareclient.com/)&#13;
&#13;
&#13;
## Docker版基于warp的sk5代理&#13;
&#13;
[项目地址](https://hub.docker.com/r/monius/docker-warp-socks)&#13;
&#13;
#### 1：普通部署 &#13;
&#13;
```&#13;
docker run --privileged --restart=always -itd \&#13;
    --name warp_socks \&#13;
    --cap-add NET_ADMIN \&#13;
    --cap-add SYS_MODULE \&#13;
    --sysctl net.ipv6.conf.all.disable_ipv6=0 \&#13;
    --sysctl net.ipv4.conf.all.src_valid_mark=1 \&#13;
    -v /lib/modules:/lib/modules \&#13;
    -p 127.0.0.1:9091:9091 \&#13;
    monius/docker-warp-socks&#13;
```&#13;
&#13;
此时你的9091端口的所有流量将通过WARP出站&#13;
&#13;
查看你的warp的IP：`curl -x 'socks5h://127.0.0.1:9091' -fsSL 'https://ifconfig.co'`&#13;
&#13;
&#13;
#### 2：WARP Plus 账户&#13;
```&#13;
docker run --privileged --restart=always -itd \&#13;
    --name warp_socks_plus \&#13;
    -e WGCF_LICENSE_KEY=你的plus密钥 \&#13;
    --cap-add NET_ADMIN \&#13;
    --cap-add SYS_MODULE \&#13;
    --sysctl net.ipv6.conf.all.disable_ipv6=0 \&#13;
    --sysctl net.ipv4.conf.all.src_valid_mark=1 \&#13;
    -v /lib/modules:/lib/modules \&#13;
    -p 127.0.0.1:9091:9091 \&#13;
    monius/docker-warp-socks&#13;
```&#13;
运行`curl -x 'socks5h://127.0.0.1:9091' -fsSL 'https://www.cloudflare.com/cdn-cgi/trace'` 看到`plus`则表示WARP Plus密钥应用成功。</description><guid isPermaLink="true">http://blog.52013120.xyz/post/Liunx-pei-zhi-wrap.html</guid><pubDate>Tue, 02 Jul 2024 07:39:07 +0000</pubDate></item><item><title>代理工具和SSH工具下载</title><link>http://blog.52013120.xyz/post/dai-li-gong-ju-he-SSH-gong-ju-xia-zai.html</link><description>  &#13;
| 类型 | 名称 | 下载地址 |&#13;
| :--- | :----: | :---: |&#13;
| 安卓代理  | v2rayNG  |https://github.com/2dust/v2rayNG/releases|&#13;
| 安卓代理  | clash-meta  |https://github.com/MetaCubeX/ClashMetaForAndroid/releases|&#13;
| Win代理  | clash-verge-rev  |https://github.com/clash-verge-rev/clash-verge-rev/releases|&#13;
| Win代理  | v2rayN  |https://github.com/2dust/v2rayN/releases|&#13;
| ios代理  | 小火箭  |https://apps.apple.com/us/app/shadowrocket/id932747118|&#13;
| ios代理  | V2Box  |https://apps.apple.com/us/app/v2box-v2ray-client/id6446814690|&#13;
| mac代理  | v2rayU  |https://github.com/yanue/V2rayU/releases|&#13;
| mac代理  | V2Box  |https://apps.apple.com/us/app/v2box-v2ray-client/id6446814690|&#13;
| mac代理  | clash-verge-rev  |https://github.com/clash-verge-rev/clash-verge-rev/releases|&#13;
| Liunx代理  | v2rayA  |https://v2raya.org/docs/prologue/introduction|&#13;
| 安卓SSH  | Termius汉化  |https://github.com/alongw/Termius-zh_CN/releases|&#13;
| 安卓SSH  | termux |https://github.com/termux/termux-app/releases|&#13;
| 安卓SSH  | serverbox  |https://github.com/lollipopkit/flutter_server_box/releases|&#13;
| 安卓code  | Acode |https://acode.app|&#13;
| 电脑SSH  | tabby  |https://github.com/Eugeny/tabby/releases|&#13;
| 电脑SSH  | WindTerm  |https://github.com/kingToolbox/WindTerm/releases|&#13;
| 电脑SSH  | FinalShell  |https://www.hostbuf.com/t/988.html|&#13;
| 电脑code  | Visual Studio Code  |https://code.visualstudio.com|&#13;
| ios SSH  | ServerBox  |https://apps.apple.com/us/app/serverbox-status-tools/id1586449703|&#13;
| ios SSH  | Termius |https://apps.apple.com/us/app/termius-terminal-ssh-client/id549039908|。</description><guid isPermaLink="true">http://blog.52013120.xyz/post/dai-li-gong-ju-he-SSH-gong-ju-xia-zai.html</guid><pubDate>Tue, 02 Jul 2024 07:38:03 +0000</pubDate></item><item><title>VPS常用命令</title><link>http://blog.52013120.xyz/post/VPS-chang-yong-ming-ling.html</link><description>### 安装node环境&#13;
```&#13;
curl https://get.volta.sh | bash&#13;
```&#13;
```&#13;
export VOLTA_HOME='$HOME/.volta'&#13;
export PATH='$VOLTA_HOME/bin:$PATH'&#13;
```&#13;
```&#13;
source ~/.bashrc&#13;
```&#13;
```&#13;
volta install node@16.0.0&#13;
```&#13;
切换node版本只需再次安装需要的版本即可自动切换&#13;
&#13;
&#13;
&#13;
### 3xui&#13;
&#13;
```&#13;
bash &lt;(curl -Ls https://raw.githubusercontent.com/admin8800/x-ui/main/install.sh)&#13;
```&#13;
&#13;
&#13;
###  一键wrap&#13;
&#13;
```&#13;
wget -N https://gitlab.com/fscarmen/warp/-/raw/main/menu.sh &amp;&amp; bash menu.sh [option] [lisence/url/token]&#13;
```&#13;
&#13;
```&#13;
warp [option] [lisence]&#13;
```&#13;
&#13;
###  一键安装docker&#13;
&#13;
```&#13;
curl -fsSL https://get.docker.com | sh&#13;
```&#13;
&#13;
###  查看系统内核&#13;
```&#13;
dpkg --print-architecture&#13;
```&#13;
&#13;
&#13;
&#13;
```&#13;
uname -a&#13;
```&#13;
&#13;
####  查看系统版本&#13;
```&#13;
cat /etc/os-release&#13;
```&#13;
```&#13;
lsb_release -a&#13;
```&#13;
&#13;
###  VPS开启root登录并且修改密码：&#13;
```&#13;
bash &lt;(curl -L -s check.unlock.media)&#13;
```&#13;
&#13;
 &#13;
```&#13;
bash &lt;(curl -L -s check.unlock.media) -M 4&#13;
```&#13;
&#13;
 &#13;
```&#13;
bash &lt;(curl -L -s check.unlock.media) -M 6&#13;
```&#13;
&#13;
###  查看端口占用：&#13;
```&#13;
sudo lsof -i -P -n&#13;
```&#13;
```&#13;
ss -tuln&#13;
```&#13;
```&#13;
lsof -i:端口号&#13;
```&#13;
#### 释放端口&#13;
```&#13;
kill PID数字&#13;
```&#13;
&#13;
###  放行端口：&#13;
&#13;
`sudo ufw allow 端口号`&#13;
&#13;
`sudo ufw allow 起始端口:结束端口`&#13;
&#13;
`sudo ufw enable`   #  重启ufw防火墙&#13;
&#13;
###  关闭端口：&#13;
`sudo ufw deny 端口号`&#13;
&#13;
###  只允许指定IP连接22端口：&#13;
`sudo ufw allow from 192.168.1.100 to any port 22`      #  多IP用英文的逗号分开&#13;
&#13;
###  文件类型转换：&#13;
&#13;
`mv config.txt config.json`&#13;
&#13;
`mv shell.txt shell.sh`&#13;
&#13;
&#13;
###  开启虚拟内存：&#13;
&#13;
```&#13;
sudo fallocate -l 3G /swapfile &amp;&amp; sudo chmod 700 /swapfile &amp;&amp; sudo mkswap /swapfile &amp;&amp; sudo swapon /swapfile &amp;&amp; echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab&#13;
```&#13;
&#13;
&#13;
###  防火墙&#13;
&#13;
`firewall-cmd --state`                          # 查看防火墙状态    &#13;
&#13;
&#13;
`systemctl stop firewalld.service`                # 停止防火墙    &#13;
&#13;
&#13;
`systemctl disable firewalld.service`             # 禁止防火墙开机自启&#13;
&#13;
###  一键开启bbr加速&#13;
&#13;
```&#13;
wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh &amp;&amp; chmod +x bbr.sh &amp;&amp; ./bbr.sh&#13;
```&#13;
&#13;
```&#13;
sysctl net.ipv4.tcp_congestion_control&#13;
```&#13;
&#13;
&#13;
&#13;
###  人型自走bot乌班图脚本&#13;
&#13;
&#13;
```&#13;
wget https://raw.githubusercontent.com/TeamPGM/PagerMaid-Pyro/development/utils/install.sh -O install.sh &amp;&amp; chmod +x install.sh &amp;&amp; bash install.sh&#13;
```&#13;
&#13;
&#13;
使用该脚本会将 `Pagermaid-Pyro``` 安装至 ```/var/lib/pagermaid` 目录下。</description><guid isPermaLink="true">http://blog.52013120.xyz/post/VPS-chang-yong-ming-ling.html</guid><pubDate>Tue, 02 Jul 2024 05:14:12 +0000</pubDate></item></channel></rss>